---

# Run the rest only if there is files to get
- block:

  - name: create list of files
    set_fact: fichier="{{ item.path }}"
    with_items: "{{ path_files.files }}"
    register: filespath

  - name: Create a temp zip archive from {{ component }}
    archive:
      path: "{{ filespath.results| map(attribute='ansible_facts.fichier') | list }}"
      dest: "{{ vitamui_defaults.folder.root_path | default('/vitamui') }}/tmp/{{ component }}/{{ component }}_{{ suffix }}.zip"
      format: zip

 # - block:
         
  #  - set_fact:
  #      files_for_zip: "{{ filespath.results | map(attribute='ansible_facts.fichier') | list | to_json }}"

 #   - set_fact:
 #       path_files_for_zip: "{{ item }}"
 #     with_items: "{{ files_for_zip }}"    
  
 #   when: "{{ filespath.results | map(attribute='ansible_facts.fichier') | list | length }} == 1"
  
 # - block:

  #- set_fact:
  #    path_files_for_zip: "{{ filespath.results | map(attribute='ansible_facts.fichier') | list }}"

#    when: "{{ filespath.results | map(attribute='ansible_facts.fichier') | list | length }} > 1"

  - name: fetch zip file with rsync method
    synchronize:
      mode: pull
      src: "{{ vitamui_defaults.folder.root_path | default('/vitamui') }}/tmp/{{ component }}/{{ component }}_{{ suffix }}.zip"
      dest: "{{ inventory_dir }}/troubleshoot/{{ inventory_hostname }}/{{ component }}/"
    when: sync_type | default('fetch') | lower == 'rsync'

  - name: fetch zip file with fetch method
    become: true
    fetch:
      src: "{{ vitamui_defaults.folder.root_path | default('/vitamui') }}/tmp/{{ component }}/{{ component }}_{{ suffix }}.zip"
      dest: "{{ inventory_dir }}/troubleshoot/{{ inventory_hostname }}/{{ component }}/"
      flat: yes
    when: sync_type | default('fetch') | lower == 'fetch'

  - name: remove temp zip file on host
    file:
      path: "{{ vitamui_defaults.folder.root_path | default('/vitamui') }}/tmp/{{ component }}/{{ component }}_{{ suffix }}.zip"
      state: absent

  when: path_files is defined and path_files.matched > 0
